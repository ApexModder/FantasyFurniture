buildscript {
    dependencies {
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

evaluationDependsOn(':common')
evaluationDependsOn(':forge')

if(rootProject.hasProperty('PARCHMENT_MAPPINGS')) {
    apply plugin: 'org.parchmentmc.librarian.forgegradle'
}

minecraft {
    if(rootProject.hasProperty('PARCHMENT_MAPPINGS')) {
        if(rootProject.hasProperty('PARCHMENT_MINECRAFT_VERSION')) {
            mappings channel: 'parchment', version: "${PARCHMENT_MINECRAFT_VERSION}-${PARCHMENT_MAPPINGS}-${MINECRAFT_VERSION}"
        } else {
            mappings channel: 'parchment', version: "${PARCHMENT_MAPPINGS}-${MINECRAFT_VERSION}"
        }
    } else {
        mappings channel: 'official', version: "${MINECRAFT_VERSION}"
    }

    // TODO: See if we can get auto convert the AW to AT
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        data {
            ideaModule "${rootProject.name}.${project.name}.main"
            workingDirectory file('run')
            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'
            property 'fml.earlyprogresswindow', 'false'
            args '--mod', MOD_ID
            args '--client', '--server', '--validate'
            args '--input', file('blockbench')
            args '--output', project(':common').file('src/main/generated')
            args '--existing', file('src/main/resources')
            args '--existing', project(':common').file('src/main/resources')
            forceExit false

            mods {
                "${MOD_ID}" {
                    source sourceSets.main
                    source project(':common').sourceSets.main
                    source project(':forge').sourceSets.main
                }
            }
        }
    }
}

mixin {
    extraMappings file('build/createMcpToSrg/output.tsrg')
}

dependencies {
    minecraft "net.minecraftforge:forge:${MINECRAFT_VERSION}-${FORGE_VERSION}"
    implementation fg.deobf("dev.architectury:architectury-forge:$ARCHITECTURY_DEV_VERSION")
    implementation fg.deobf("xyz.apex.minecraft.apexcore.forge:apexcore-forge:${APEXCORE_DEV_VERSION}+${MINECRAFT_VERSION}")
    implementation(project(path: ':common', configuration: 'namedElements')) { transitive false }
    implementation(project(path: ':forge', configuration: 'namedElements')) { transitive false }
}

jar.finalizedBy('reobfJar')

idea.module {
    excludeDirs += [ file('run') ]
}
