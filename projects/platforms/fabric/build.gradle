apply from: rootProject.file('scripts/fabric.gradle')
apply plugin: 'me.modmuss50.mod-publish-plugin'

loom {
    runs {
        data {
            server()
            ideConfigGenerated true
            vmArg '-Dfabric-api.datagen'
            vmArg "-Dfabric-api.datagen.output-dir=${project(':common').file('src/generated/resources')}"
            vmArg "-Dfabric-api.datagen.modid=${MOD_ID}"
        }
    }
}

dependencies {
    if(rootProject.hasProperty('APEXCORE_DEV_VERSION')) {
        if(APEXCORE_DEV_VERSION.endsWithIgnoreCase('-SNAPSHOT')) {
            include "xyz.apex.minecraft.apexcore:apexcore-fabric:${APEXCORE_DEV_VERSION}"
        } else {
            include "xyz.apex.minecraft.apexcore:apexcore-fabric:${APEXCORE_DEV_VERSION}+${MINECRAFT_VERSION}"
        }
    } else {
        include "xyz.apex.minecraft.apexcore:apexcore-fabric:${APEXCORE_VERSION}+${MINECRAFT_VERSION}"
    }
}

processResources {
    from project(':common').sourceSets.main.resources
}

compileJava {
    source project(':common').sourceSets.main.allSource
}

sourcesJar {
    from project(':common').sourceSets.main.allJava
}

publishMods {
    file = remapJar.archiveFile
    changelog = rootProject.file('changelogs/changelog.md').exists() ? rootProject.file('changelogs/changelog.md').getText('UTF-8') : ''
    type = me.modmuss50.mpp.ReleaseType.of("${MOD_RELEASE_TYPE}")
    maxRetries = 5
    version = "${MOD_FULL_VERSION}"
    displayName = "[Fabric] ${MOD_NAME} - Base - ${MOD_FULL_VERSION}+${MINECRAFT_VERSION}"
    modLoaders.add('fabric')
    additionalFiles.from(remapSourcesJar.archiveFile)
    dryRun = !providers.environmentVariable('MODRINTH_TOKEN').isPresent() || !providers.environmentVariable('CURSEFORGE_TOKEN').isPresent()

    curseforge('curseforgeFabricBase') {
        projectId = "${MOD_CURSEFORGE_ID}"
        accessToken = providers.environmentVariable('CURSEFORGE_TOKEN').getOrNull()
        minecraftVersions.add("${MINECRAFT_VERSION}")

        requires {
            slug = "${FABRIC_CURSEFORGE_SLUG}"
        }

        embeds {
            slug = "${APEXCORE_CURSEFORGE_SLUG}"
        }
    }

    modrinth('modrinthFabricBase') {
        projectId = "${MOD_MODRINTH_ID}"
        accessToken = providers.environmentVariable('MODRINTH_TOKEN').getOrNull()
        minecraftVersions.add("${MINECRAFT_VERSION}")

        requires {
            slug = "${FABRIC_CURSEFORGE_SLUG}"
        }

        embeds {
            slug = "${APEXCORE_CURSEFORGE_SLUG}"
        }
    }
}