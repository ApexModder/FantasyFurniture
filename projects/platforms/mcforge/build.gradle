apply from: rootProject.file('scripts/mcforge.gradle')
apply plugin: 'me.modmuss50.mod-publish-plugin'

processResources {
    from project(':common').sourceSets.main.resources
}

compileJava {
    source project(':common').sourceSets.main.allSource
}

sourcesJar {
    from project(':common').sourceSets.main.allJava
}

publishing {
    publications {
        release(MavenPublication) {
            artifact jar
            artifact sourcesJar
            artifact tasks.jarJar
        }
    }
}

publishMods {
    file = tasks.jarJar.archiveFile
    changelog = rootProject.file('changelogs/changelog.md').exists() ? rootProject.file('changelogs/changelog.md').getText('UTF-8') : ''
    type = me.modmuss50.mpp.ReleaseType.of("${MOD_RELEASE_TYPE}")
    maxRetries = 5
    version = "${MOD_FULL_VERSION}"
    displayName = "[MinecraftForge] ${MOD_NAME} - Base - ${MOD_FULL_VERSION}+${MINECRAFT_VERSION}"
    modLoaders.add('forge')
    additionalFiles.from(jar.archiveFile, sourcesJar.archiveFile)
    dryRun = !providers.environmentVariable('MODRINTH_TOKEN').isPresent() || !providers.environmentVariable('CURSEFORGE_TOKEN').isPresent()

    curseforge('curseforgeMinecraftForgeBase') {
        projectId = "${MOD_CURSEFORGE_ID}"
        accessToken = providers.environmentVariable('CURSEFORGE_TOKEN').getOrNull()
        minecraftVersions.add("${MINECRAFT_VERSION}")

        embeds {
            slug = "${APEXCORE_CURSEFORGE_SLUG}"
        }
    }

    modrinth('modrinthMinecraftForgeBase') {
        projectId = "${MOD_MODRINTH_ID}"
        accessToken = providers.environmentVariable('MODRINTH_TOKEN').getOrNull()
        minecraftVersions.add("${MINECRAFT_VERSION}")

        embeds {
            slug = "${APEXCORE_CURSEFORGE_SLUG}"
        }
    }
}