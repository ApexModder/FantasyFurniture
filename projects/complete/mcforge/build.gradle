apply from: rootProject.file('scripts/mcforge.gradle')

minecraft {
    runs {
        configureEach {
            mods {
                "${MOD_ID}_complete" {
                    source sourceSets.main
                }

                if(findProject(':nordic-mcforge') != null) {
                    "${MOD_ID}_nordic" {
                        source project(':nordic-mcforge').sourceSets.main
                    }
                }
            }
        }

        client {
            workingDirectory file('run/client')
        }

        if(rootProject.hasProperty('DEVLOGIN_VERSION')) {
            clientLogin {
                parent runs.client
                main 'net.covers1624.devlogin.DevLogin'
                args '--launch_target', '{LAUNCH_TARGET}'
                lazyToken("LAUNCH_TARGET", { runs.client.main })
            }
        }

        server {
            workingDirectory file('run/server')
            args 'nogui'
        }
    }
}

dependencies {
    compileOnly project(path: ':complete-common', configuration: 'namedElements')
    implementation project(':mcforge')
    jarJar(project(':mcforge')) {
        transitive = false
        jarJar.ranged(it, "[${MOD_FULL_VERSION},)")
    }

    if(findProject(':nordic-mcforge') != null) {
        implementation project(':nordic-mcforge')
        jarJar(project(':nordic-mcforge')) {
            transitive = false
            jarJar.ranged(it, "[${MOD_FULL_VERSION},)")
        }
    }
}

processResources {
    from project(':complete-common').sourceSets.main.resources
}

compileJava {
    source project(':complete-common').sourceSets.main.allSource
}

sourcesJar {
    from project(':complete-common').sourceSets.main.allJava
}

tasks.jarJar.configure {
    archiveClassifier.set('')
}

jar {
    archiveClassifier.set('slim')
}

artifacts {
    archives tasks.jarJar
}

reobf {
    jarJar { }
}

tasks.jarJar.finalizedBy('reobfJarJar')

collectJars {
    def tasks = [ jar, sourcesJar, tasks.jarJar ]
    dependsOn tasks
    from tasks
}

publishing {
    publications {
        release(MavenPublication) {
            artifact jar
            artifact sourcesJar
            artifact tasks.jarJar
        }
    }
}