plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
}

loom {
    if(accessWidenerFile.exists()) {
        accessWidenerPath = accessWidenerFile
    }

    enableTransitiveAccessWideners = true

    runs {
        client {
            client()
            ideConfigGenerated true
        }

        server {
            server()
            ideConfigGenerated true
        }
    }

    mods {
        "${MOD_ID}" {
            sourceSet sourceSets.main
            sourceSet project(':common').sourceSets.main
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${MINECRAFT_VERSION}"

    mappings(loom.layered {
        officialMojangMappings()

        if(rootProject.hasProperty('PARCHMENT_MAPPINGS')) {
            def mcVersion = rootProject.hasProperty('PARCHMENT_MINECRAFT_VERSION') ? "${PARCHMENT_MINECRAFT_VERSION}" : "${MINECRAFT_VERSION}"
            parchment("org.parchmentmc.data:parchment-${mcVersion}:${PARCHMENT_MAPPINGS}@zip")
        }
    })

    modImplementation "net.fabricmc:fabric-loader:${FABRIC_LOADER_VERSION}"
    modApi "net.fabricmc.fabric-api:fabric-api:${FABRIC_API_VERSION}+${MINECRAFT_VERSION}"

    implementation project(path: ':common', configuration: 'namedElements')
    modImplementation "xyz.apex.minecraft.apexcore:apexcore-fabric:${APEXCORE_DEV_VERSION}+${MINECRAFT_VERSION}"
}

processResources {
    from project(':common').sourceSets.main.resources
}

compileJava {
    source project(':common').sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            loom.disableDeprecatedPomGeneration(it)

            artifact remapJar

            pom.withXml {
                def depsNode = asNode().appendNode('dependencies')

                // common
                def depNode = depsNode.appendNode('dependency')
                def prj = project(':common')
                depNode.appendNode('groupId', prj.group)
                depNode.appendNode('artifactId', prj.archivesBaseName)
                depNode.appendNode('version', prj.version)
                depNode.appendNode('scope', 'compile')

                // apexcore
                depNode = depsNode.appendNode('dependency')
                depNode.appendNode('groupId', 'xyz.apex.minecraft.apexcore')
                depNode.appendNode('artifactId', 'apexcore-fabric')
                depNode.appendNode('version', "${APEXCORE_DEV_VERSION}")
                depNode.appendNode('scope', 'compile')

                // fabric
                depNode = depsNode.appendNode('dependency')
                depNode.appendNode('groupId', 'net.fabricmc')
                depNode.appendNode('artifactId', 'fabric-loader')
                depNode.appendNode('version', "${FABRIC_LOADER_VERSION}")
                depNode.appendNode('scope', 'compile')

                depNode = depsNode.appendNode('dependency')
                depNode.appendNode('groupId', 'net.fabricmc.fabric-api')
                depNode.appendNode('artifactId', 'fabric-api')
                depNode.appendNode('version', "${FABRIC_API_VERSION}+${MINECRAFT_VERSION}")
                depNode.appendNode('scope', 'compile')
            }
        }
    }
}
